import { test, expect } from '@playwright/test';
import './helpers/playwright-coverage';
import { uiSignIn } from './helpers/uiSignIn';

// Dynamically load test user credentials generated by global-setup
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
const __dirname = path.dirname(fileURLToPath(import.meta.url));
const testUsersPath = path.resolve(__dirname, 'test-users.json');
const testUsers = JSON.parse(fs.readFileSync(testUsersPath, 'utf-8'));
const TEST_EMAIL = testUsers[0].email;
const TEST_PASSWORD = testUsers[0].password;

// Adjust selectors as needed for your login form
const EMAIL_SELECTOR = 'input[type="email"], input[name="email"]';
const PASSWORD_SELECTOR = 'input[type="password"], input[name="password"]';
const SUBMIT_SELECTOR = 'button[type="submit"], button:has-text("Sign In"), button:has-text("Login")';
const PROFILE_SELECTOR = '[data-testid="profile-page"], [data-testid="user-profile"], [data-testid="profile"]';

const LOGIN_PATH = '/profile';
const POST_LOGIN_PATH = '/profile';

test('UI auth: can sign in via login form and see profile', async ({ page }) => {
  await uiSignIn(page, { email: TEST_EMAIL, password: TEST_PASSWORD, profilePath: LOGIN_PATH });
  // Wait for profile page to be visible
  const profileVisible = await page.locator(PROFILE_SELECTOR).first().isVisible().catch(() => false);
  expect(profileVisible).toBeTruthy();
});
